name: "release"

on:
  repository_dispatch:
    types: [on-demand-release]

jobs:
  # ---------- macOS build ----------
  build-macos:
    permissions:
      contents: write
    name: macOS universal
    runs-on: macos-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4
        with:
          repository: razertory/ChatFrameApp
          token: ${{ secrets.GH_TOKEN_FOR_CHECKOUT }}
          ref: ${{ github.event.client_payload.sha }}

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-apple-darwin,x86_64-apple-darwin"

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ". -> target"

      - name: install frontend dependencies
        run: npm ci

      - uses: tauri-apps/tauri-action@v0.5.18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          args: "--target universal-apple-darwin"
          tagName: v__VERSION__
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          repo: chatframe_release
          owner: razertory
          releaseCommitish: main

  # ---------- Windows build ----------
  build-windows:
    permissions:
      contents: write
    name: Windows x64
    runs-on: windows-latest
    steps:
      - name: Check out project
        uses: actions/checkout@v4
        with:
          repository: razertory/ChatFrameApp
          token: ${{ secrets.GH_TOKEN_FOR_CHECKOUT }}
          ref: ${{ github.event.client_payload.sha }}

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ". -> target"

      - name: install frontend dependencies
        run: npm ci

      - uses: tauri-apps/tauri-action@v0.5.18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          args: ""
          tagName: v__VERSION__
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          repo: chatframe_release
          owner: razertory
          releaseCommitish: main

  # ---------- 同步 Worker ----------
  sync-worker:
    name: SYNC WORKER
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows]
    steps:
      - name: Trigger sync
        run: |
          curl -X GET 'https://warden.chatframe.co/sync_action' \
            --header 'X-Chatframe-Token: ${{ secrets.SYNC_TOKEN }}'
